@model EasyTalkWeb.Models.ViewModels.LoginViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Person> SignInManager
@{
}
<div class="container mx-auto">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">

            <h1 class="mt-3 mb-3 h3">
                Login
            </h1>

            <form method="post">
                <div class="text-danger" asp-validation-summary="All"></div>
                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <input type="email" id="email" class="form-control" asp-for="Email" required />
                    <span class="text-danger" asp-validation-for="Email"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label">Password</label>
                    <input type="password" id="password" class="form-control" asp-for="Password" required minlength="6" />
                    <span class="text-danger" asp-validation-for="Password"></span>
                </div>
                <div class="mb-3 form-check">
                    <input type="checkbox" id="rememberMe" class="form-check-input" asp-for="RememberMe" />
                    <label class="form-check-label" for="rememberMe">Remember Me</label>
                </div>
                <div class="mb-3">
                    <button type="submit" class="btn btn-dark" asp-controller="Login" asp-action="Login">Login</button>
                </div>
                <p>Or login with:</p>
                @foreach(var provider in await SignInManager.GetExternalAuthenticationSchemesAsync())
                {
                    <button type="button"
                        class="btn btn-dark"
                        id="externalLoginButton"
                        name="provider" 
                        asp-route-provider="@provider.Name">
                        @provider.Name
                    </button>
                }
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("externalLoginButton").addEventListener("click", function () {
            window.location.href = "@Url.Action("ExternalAuth", "ExternalAuth")";
        });
    </script>
}